---
swagger: "2.0"
info:
  version: "0.1.0"
  title: "BlockEnergy API"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /smartMeter/settle:
    post:
      tags: 
        - smartMeter    
      description: "The endpoint which is to be accessed by the smartmeter. It is supposed to be called regularly periodically.
                    For produced energy use positive energy volume, for consumed use negative energy volume. Alongside the
                    energy a period must be specified of the smartcontract for which the smartmeter is providing information."
      operationId: "settle"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: "settleRequest"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/settleRequest"
      responses:  
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "settle_controller"
  /trade/submitBidOrder:
    post:
      tags: 
        - trade      
      description: "Endpoint for placing bid for certain amount of electricity for a certain price. Requires an account's address and password alongside a volume estimate. Price could be optionally provided.
                    If the price argument is omited, the order will get matched at the lowest price after all the priced bids. Otherwise, if a price is given, the order will get matched only if an appropriate
                    match is found."
      operationId: "submitBidOrder"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: "buyRequest"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/buyRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"          
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "trade_controller"
      
  /trade/submitAskOrder:
    post:
      tags: 
        - trade  
      description: "Endpoint for placing ask orders for certain amount of electricity at a certain price. Account adress and password are required."
      operationId: "submitAskOrder"
      parameters:
        - name: "sellRequest"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/sellRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"          
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "trade_controller"

  /trade/submitReserveBidOrder:
    post:
      tags: 
        - trade      
      description: "Endpoint for placing bid for certain amount of electricity for a certain price. Requires an account's address and password alongside a volume estimate. Price could be optionally provided.
                    If the price argument is omited, the order will get matched at the lowest price after all the priced bids. Otherwise, if a price is given, the order will get matched only if an appropriate
                    match is found."
      operationId: "submitReserveBidOrder"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: "buyRequest"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/buyRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"          
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "trade_controller"

  /trade/submitReserveAskOrder:
    post:
      tags: 
        - trade  
      description: "Endpoint for placing ask orders for certain amount of electricity at a certain price. Account adress and password are required."
      operationId: "submitReserveAskOrder"
      parameters:
        - name: "sellRequest"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/sellRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"          
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "trade_controller"
  /trade/updateState:
    post:
      tags: 
        - trade      
      description: "updates state"
      operationId: "updateState"
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"    
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "trade_controller"
  /authority/register:
    post:
      tags: 
        - authority    
      description: "Registers a new user account, given a password and an user type. Returns the address of the newly created account. May only be invoked by users of 'Authority' status. \"type\" must be \"consumer\" or \"producer\"."
      operationId: "register"
      parameters:
        - name: "registerRequest"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/registerRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/registerResponse"          
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "authority_controller"
  /info/balance:
    get:
      tags: 
        - info 
      description: "Get the balance of the user's account."
      operationId: "getBalance"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "userAddress"
          in: "query"
          description: "The address of the account, whose balance will be returned."
          type: "string"
          required: true
      responses:
        200:
          description: "Returns the current balance from specific account."
          schema:
            $ref: "#/definitions/balanceResponse"
        404:
          description: "Operation not found"
        500:
          description: "Server error"
      x-swagger-router-controller: "info_controller"
  /info/askOrders:
    get:
      tags: 
        - info 
      description: "Get all ask orders for the last period."
      operationId: "getAskOrders"
      parameters:
        - name: "period"
          in: "query"
          description: "Period"
          required: false
          type: "number"
      responses:
        200:
          description: "Returns orders as JSON object wrapped in JSON array. Also provides period."
          schema:
            $ref: "#/definitions/askQuotes"
        404:
          description: "Operation not found"
        500:
          description: "Server error"
      x-swagger-router-controller: "info_controller"
  /info/bidOrders:
    get:
      tags: 
        - info     
      description: "Get all bid orders for the last period."
      operationId: "getBidOrders"
      parameters:
        - name: "period"
          in: "query"
          description: "Period"
          required: false
          type: "number"
      responses:
        200:
          description: "Returns orders as JSON object wrapped in JSON array. Also provides period."
          schema:
            $ref: "#/definitions/bidQuotes"          
        404:
          description: "Operation not found"
        500:
          description: "Server error"
      x-swagger-router-controller: "info_controller"
  /info/reserveAskOrders:
    get:
      tags: 
        - info 
      description: "Get all ask orders for the last period."
      operationId: "getReserveAskOrders"
      parameters:
        - name: "period"
          in: "query"
          description: "Period"
          required: false
          type: "number"
      responses:
        200:
          description: "Returns orders as JSON object wrapped in JSON array. Also provides period."
          schema:
            $ref: "#/definitions/askQuotes"
        404:
          description: "Operation not found"
        500:
          description: "Server error"
      x-swagger-router-controller: "info_controller"
  /info/reserveBidOrders:
    get:
      tags: 
        - info 
      description: "Get all ask orders for the last period."
      operationId: "getReserveBidOrders"
      parameters:
        - name: "period"
          in: "query"
          description: "Period"
          required: false
          type: "number"
      responses:
        200:
          description: "Returns orders as JSON object wrapped in JSON array. Also provides period."
          schema:
            $ref: "#/definitions/bidQuotes"
        404:
          description: "Operation not found"
        500:
          description: "Server error"
      x-swagger-router-controller: "info_controller"
  # /info/matchedAskOrders:
  #   get:
  #     tags: 
  #       - info     
  #     description: "Get all matched ask orders for the last period."
  #     operationId: "getMatchedAskOrders"
  #     parameters:
  #       - name: "period"
  #         in: "query"
  #         description: "Period"
  #         required: false
  #         type: "number"
  #     responses:
  #       200:
  #         description: "Returns orders as JSON object wrapped in JSON array. Also provides period."
  #         schema:
  #           $ref: "#/definitions/askQuotes"              
  #       404:
  #         description: "Operation not found"
  #       500:
  #         description: "Server error"
  #     x-swagger-router-controller: "info_controller"
  # /info/matchedBidOrders:
  #   get:
  #     tags: 
  #       - info     
  #     description: "Get all matched bid orders for the last period."
  #     operationId: "getMatchedBidOrders"
  #     parameters:
  #       - name: "period"
  #         in: "query"
  #         description: "Period"
  #         required: false
  #         type: "number"
  #     responses:
  #       200:
  #         description: "Returns orders as JSON object wrapped in JSON array. Also provides period."
  #         schema:
  #           $ref: "#/definitions/askQuotes"              
  #       404:
  #         description: "Operation not found"
  #       500:
  #         description: "Server error"
  #     x-swagger-router-controller: "info_controller"
  # /info/matchedAskOrdersForUser:
  #   get:
  #     tags: 
  #       - info     
  #     description: "Get all matched ask orders for the last period for given user."
  #     operationId: "getMatchedAskOrdersForUser"
  #     parameters:
  #       - name: "period"
  #         in: "query"
  #         description: "Period"
  #         required: false
  #         type: "number"
  #       - name: "userAddress"
  #         in: "query"
  #         description: "The address of the account, whose balance will be returned."
  #         type: "string"
  #         required: true
  #     responses:
  #       200:
  #         description: "Returns orders as JSON object wrapped in JSON array. Also provides period."
  #         schema:
  #           $ref: "#/definitions/askQuotes"              
  #       404:
  #         description: "Operation not found"
  #       500:
  #         description: "Server error"
  #     x-swagger-router-controller: "info_controller"
  # /info/matchedBidOrdersForUser:
  #   get:
  #     tags: 
  #       - info     
  #     description: "Get all matched bid orders for the last period for given user."
  #     operationId: "getMatchedBidOrdersForUser"
  #     parameters:
  #       - name: "period"
  #         in: "query"
  #         description: "Period"
  #         required: false
  #         type: "number"
  #       - name: "userAddress"
  #         in: "query"
  #         description: "The address of the account, whose balance will be returned."
  #         type: "string"
  #         required: true
  #     responses:
  #       200:
  #         description: "Returns orders as JSON object wrapped in JSON array. Also provides period."
  #         schema:
  #           $ref: "#/definitions/askQuotes"              
  #       404:
  #         description: "Operation not found"
  #       500:
  #         description: "Server error"
  #     x-swagger-router-controller: "info_controller"
  /info/reserveAskPrice:
    get:
      tags: 
        - info
      description: "Get ask reserve price for specific period. If no period is specified will return for the last period."
      operationId: "getReserveAskPrice"
      parameters:
      - name: "period"
        in: "query"
        description: "Period"
        required: false
        type: "number"
      responses:
        200:
          description: "Returns ask reserve price."
          schema:
            type: number
        404:
          description: "Operation not found"
        500:
          description: "Server error"
      x-swagger-router-controller: "info_controller"
  /info/reserveBidPrice:
    get:
      tags: 
        - info
      description: "Get bid reserve price for specific period. If no period is specified will return for the last period."
      operationId: "getReserveBidPrice"
      parameters:
      - name: "period"
        in: "query"
        description: "Period"
        required: false
        type: "number"
      responses:
        200:
          description: "Returns bid reserve price."
          schema:
            type: number
        404:
          description: "Operation not found"
        500:
          description: "Server error"
      x-swagger-router-controller: "info_controller"
  /info/matchingPrice:
    get:
      tags: 
        - info
      description: "Get matching price for specific period. If no period is specified will return for the last period."
      operationId: "getMatchingPrice"
      parameters:
      - name: "period"
        in: "query"
        description: "Period"
        required: false
        type: "number"
      responses:
        200:
          description: "Returns matching price."
          schema:
            $ref: "#/definitions/matchingPriceResponse"
        404:
          description: "Operation not found"
        500:
          description: "Server error"
      x-swagger-router-controller: "info_controller"
  /info/allMatchingPrices:
    get:
      tags:
        - info
      description: "Get all matching prices"
      operationId: "getAllMatchingPrices"
      responses:
        200:
          description: "Returns matching prices as json array"
          schema:
            $ref: "#/definitions/getAllMatchingPricesResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "info_controller"
  /info/allReserveBidPrices:
    get:
      tags:
        - info
      description: "Get all reserve prices"
      operationId: "getAllReserveBidPrices"
      responses:
        200:
          description: "Returns reserve prices as json array"
          schema:
            $ref: "#/definitions/getAllMatchingPricesResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "info_controller"
  /info/allReserveAskPrices:
    get:
      tags:
        - info
      description: "Get all reserve prices"
      operationId: "getAllReserveAskPrices"
      responses:
        200:
          description: "Returns reserve prices as json array"
          schema:
            $ref: "#/definitions/getAllMatchingPricesResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "info_controller"

  /info/state:
    get:
      tags: 
        - info
      description: "Get the current state"
      operationId: "getState"
      responses:
        200:
          description: "Returns the current state and period."
          schema:
            $ref: "#/definitions/stateReponse"
        404:
          description: "Operation not found"
        500:
          description: "Server error"
      x-swagger-router-controller: "info_controller"
      
  /sockets/matchingEvent:
    get:
      tags:
        - sockets
      description: "socket.on('matchingEvent', callback) // see socket.io"
      operationId: "getMatchingEvent"
      responses: 
        200:
          description: "Rerturns the matching price and the associated period"
          schema:
            $ref: "#/definitions/matchingInfo"
    x-swagger-router-controller: "info_controller"
  
  /sockets/newPeriodEvent:
    get:
      tags:
        - sockets
      description: "socket.on('newPeriodEvent', callback) // see socket.io"
      operationId: "getPeriod"
      responses: 
        200:
          description: "Rerturns number of new period"
          schema:
            $ref: "#/definitions/periodResponse"
    x-swagger-router-controller: "info_controller"
    
  /sockets/orderEvent:
    get:
      tags:
        - sockets
      description: "socket.on('orderEvent', callback) // see socket.io"
      operationId: "getLastOrder"
      responses: 
        200:
          description: "Rerturns info about the last order"
          schema:
            $ref: "#/definitions/orderEvent"
    x-swagger-router-controller: "info_controller"
  /sockets/blockCreationEvent:
    get:
      tags:
        - sockets
      description: "socket.on('blockCreationEvent', callback) // see socket.io"
      operationId: "getLastBlock"
      responses: 
        200:
          description: "Rerturns the number of created blocks in current period"
          schema:
            $ref: "#/definitions/blockCreationEvent"
    x-swagger-router-controller: "info_controller"
    
definitions:
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  SuccessResponse:
    properties:
      succeded:
        type: boolean
  buyRequest:
    required:
      - accountAddress
      - password
      - volume
    properties:
      accountAddress:
        type: string
      password:
        type: string
      volume:
        type: number
      price:
        type: number
  sellRequest:
    required:
      - accountAddress
      - password
      - volume
      - price
    properties:
      accountAddress:
        type: string
      password:
        type: string
      volume:
        type: number
      price:
        type: number
  registerRequest:
    required:
      - password
      - type
    properties:
      password:
        type: string
      type:
        type: string
  registerResponse:
    properties:
      userAddress:
        type: string
  matchingPriceResponse:
    properties:
      period:
        type: number
      matchingPrice:
        type: number

  settleRequest:
    required:
      - accountAddress
      - password
      - period
      - volume
      - type
    properties:
      accountAddress:
        type: string
      password:
        type: string
      volume:
        type: number
      period:
        type: number
      type:
        type: string
  stateReponse:
    properties:
      state:
        type: string
      period:
        type: number
  periodResponse:
    properties:
      period:
        type: number
  balanceResponse:
    properties:
      balance:
        type: number
  getAllMatchingPricesResponse:
      type: array
      items:
        $ref: "#/definitions/matchingInfo"
  matchingInfo:
    properties:
      period:
        type: number
      price:
        type: number
  bidQuotes:
    type: array
    items:
      $ref: "#/definitions/bidQuoteTupel"
  bidQuoteTupel:
    properties:
      period:
        type: number
      price:
        type: number
      volume:
        type: number
  askQuotes:
    type: array
    items:
      $ref: "#/definitions/askQuoteTupel"
  askQuoteTupel:
    properties:
      period:
        type: number
      price:
        type: number
      volume:
        type: number
  orderEvent:
    properties:
      type:
        type: string
      period:
        type: number
      price:
        type: number
      volume:
        type: number
  blockCreationEvent:
    properties:
      MinedBlocksInCurrPeriod:
        type: number
      
        
        
        
        
        
        
        
        
        
        
        
        
